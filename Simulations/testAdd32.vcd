$date
  Fri Jan 12 17:23:48 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! sig_a[31:0] $end
$var reg 32 " sig_b[31:0] $end
$var reg 1 # sig_c $end
$var reg 32 $ res_out[31:0] $end
$var reg 1 % sig_cout $end
$scope module adder32_inst $end
$var reg 32 & a[31:0] $end
$var reg 32 ' b[31:0] $end
$var reg 1 ( cin $end
$var reg 32 ) res[31:0] $end
$var reg 1 * cout $end
$var reg 10 + c[9:0] $end
$scope module fa0 $end
$var reg 4 , a[3:0] $end
$var reg 4 - b[3:0] $end
$var reg 1 . cin $end
$var reg 4 / res[3:0] $end
$var reg 1 0 cout $end
$var reg 5 1 c[4:0] $end
$scope module fa0 $end
$var reg 1 2 a $end
$var reg 1 3 b $end
$var reg 1 4 cin $end
$var reg 1 5 res $end
$var reg 1 6 cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 7 a $end
$var reg 1 8 b $end
$var reg 1 9 cin $end
$var reg 1 : res $end
$var reg 1 ; cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > cin $end
$var reg 1 ? res $end
$var reg 1 @ cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 A a $end
$var reg 1 B b $end
$var reg 1 C cin $end
$var reg 1 D res $end
$var reg 1 E cout $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var reg 4 F a[3:0] $end
$var reg 4 G b[3:0] $end
$var reg 1 H cin $end
$var reg 4 I res[3:0] $end
$var reg 1 J cout $end
$var reg 5 K c[4:0] $end
$scope module fa0 $end
$var reg 1 L a $end
$var reg 1 M b $end
$var reg 1 N cin $end
$var reg 1 O res $end
$var reg 1 P cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 Q a $end
$var reg 1 R b $end
$var reg 1 S cin $end
$var reg 1 T res $end
$var reg 1 U cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X cin $end
$var reg 1 Y res $end
$var reg 1 Z cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 [ a $end
$var reg 1 \ b $end
$var reg 1 ] cin $end
$var reg 1 ^ res $end
$var reg 1 _ cout $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var reg 4 ` a[3:0] $end
$var reg 4 a b[3:0] $end
$var reg 1 b cin $end
$var reg 4 c res[3:0] $end
$var reg 1 d cout $end
$var reg 5 e c[4:0] $end
$scope module fa0 $end
$var reg 1 f a $end
$var reg 1 g b $end
$var reg 1 h cin $end
$var reg 1 i res $end
$var reg 1 j cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 k a $end
$var reg 1 l b $end
$var reg 1 m cin $end
$var reg 1 n res $end
$var reg 1 o cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 p a $end
$var reg 1 q b $end
$var reg 1 r cin $end
$var reg 1 s res $end
$var reg 1 t cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 u a $end
$var reg 1 v b $end
$var reg 1 w cin $end
$var reg 1 x res $end
$var reg 1 y cout $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var reg 4 z a[3:0] $end
$var reg 4 { b[3:0] $end
$var reg 1 | cin $end
$var reg 4 } res[3:0] $end
$var reg 1 !" cout $end
$var reg 5 "" c[4:0] $end
$scope module fa0 $end
$var reg 1 #" a $end
$var reg 1 $" b $end
$var reg 1 %" cin $end
$var reg 1 &" res $end
$var reg 1 '" cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 (" a $end
$var reg 1 )" b $end
$var reg 1 *" cin $end
$var reg 1 +" res $end
$var reg 1 ," cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 -" a $end
$var reg 1 ." b $end
$var reg 1 /" cin $end
$var reg 1 0" res $end
$var reg 1 1" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 2" a $end
$var reg 1 3" b $end
$var reg 1 4" cin $end
$var reg 1 5" res $end
$var reg 1 6" cout $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var reg 4 7" a[3:0] $end
$var reg 4 8" b[3:0] $end
$var reg 1 9" cin $end
$var reg 4 :" res[3:0] $end
$var reg 1 ;" cout $end
$var reg 5 <" c[4:0] $end
$scope module fa0 $end
$var reg 1 =" a $end
$var reg 1 >" b $end
$var reg 1 ?" cin $end
$var reg 1 @" res $end
$var reg 1 A" cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 B" a $end
$var reg 1 C" b $end
$var reg 1 D" cin $end
$var reg 1 E" res $end
$var reg 1 F" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 G" a $end
$var reg 1 H" b $end
$var reg 1 I" cin $end
$var reg 1 J" res $end
$var reg 1 K" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 L" a $end
$var reg 1 M" b $end
$var reg 1 N" cin $end
$var reg 1 O" res $end
$var reg 1 P" cout $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var reg 4 Q" a[3:0] $end
$var reg 4 R" b[3:0] $end
$var reg 1 S" cin $end
$var reg 4 T" res[3:0] $end
$var reg 1 U" cout $end
$var reg 5 V" c[4:0] $end
$scope module fa0 $end
$var reg 1 W" a $end
$var reg 1 X" b $end
$var reg 1 Y" cin $end
$var reg 1 Z" res $end
$var reg 1 [" cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 \" a $end
$var reg 1 ]" b $end
$var reg 1 ^" cin $end
$var reg 1 _" res $end
$var reg 1 `" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 a" a $end
$var reg 1 b" b $end
$var reg 1 c" cin $end
$var reg 1 d" res $end
$var reg 1 e" cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 f" a $end
$var reg 1 g" b $end
$var reg 1 h" cin $end
$var reg 1 i" res $end
$var reg 1 j" cout $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var reg 4 k" a[3:0] $end
$var reg 4 l" b[3:0] $end
$var reg 1 m" cin $end
$var reg 4 n" res[3:0] $end
$var reg 1 o" cout $end
$var reg 5 p" c[4:0] $end
$scope module fa0 $end
$var reg 1 q" a $end
$var reg 1 r" b $end
$var reg 1 s" cin $end
$var reg 1 t" res $end
$var reg 1 u" cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 v" a $end
$var reg 1 w" b $end
$var reg 1 x" cin $end
$var reg 1 y" res $end
$var reg 1 z" cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 {" a $end
$var reg 1 |" b $end
$var reg 1 }" cin $end
$var reg 1 !# res $end
$var reg 1 "# cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 ## a $end
$var reg 1 $# b $end
$var reg 1 %# cin $end
$var reg 1 &# res $end
$var reg 1 '# cout $end
$upscope $end
$upscope $end
$scope module fa7 $end
$var reg 4 (# a[3:0] $end
$var reg 4 )# b[3:0] $end
$var reg 1 *# cin $end
$var reg 4 +# res[3:0] $end
$var reg 1 ,# cout $end
$var reg 5 -# c[4:0] $end
$scope module fa0 $end
$var reg 1 .# a $end
$var reg 1 /# b $end
$var reg 1 0# cin $end
$var reg 1 1# res $end
$var reg 1 2# cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 3# a $end
$var reg 1 4# b $end
$var reg 1 5# cin $end
$var reg 1 6# res $end
$var reg 1 7# cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 8# a $end
$var reg 1 9# b $end
$var reg 1 :# cin $end
$var reg 1 ;# res $end
$var reg 1 <# cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 =# a $end
$var reg 1 ># b $end
$var reg 1 ?# cin $end
$var reg 1 @# res $end
$var reg 1 A# cout $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
b00000000000000000000000000000000 "
0#
b00000000000000000000000000000000 $
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
0(
b00000000000000000000000000000000 )
0*
bU00000000U +
b0000 ,
b0000 -
0.
b0000 /
00
b0000U 1
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
b0000 F
b0000 G
0H
b0000 I
0J
b0000U K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
b0000 `
b0000 a
0b
b0000 c
0d
b0000U e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
b0000 z
b0000 {
0|
b0000 }
0!"
b0000U ""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
b0000 7"
b0000 8"
09"
b0000 :"
0;"
b0000U <"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
b0000 Q"
b0000 R"
0S"
b0000 T"
0U"
b0000U V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
b0000 k"
b0000 l"
0m"
b0000 n"
0o"
b0000U p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0!#
0"#
0##
0$#
0%#
0&#
0'#
b0000 (#
b0000 )#
0*#
b0000 +#
0,#
b0000U -#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
#10000000
b00000000000000000000000000000001 "
1#
b00000000000000000000000000000010 $
b00000000000000000000000000000001 '
1(
b00000000000000000000000000000010 )
b0001 -
1.
b0010 /
b0001U 1
13
14
16
19
1:
#20000000
b10000000000000000000000000000000 "
0#
b10000000000000000000000000000000 $
b10000000000000000000000000000000 '
0(
b10000000000000000000000000000000 )
b0000 -
0.
b0000 /
b0000U 1
03
04
06
09
0:
b1000 )#
b1000 +#
1>#
1@#
#30000000
b00000000000000000000000000000001 !
b10000000000000000000000000000001 $
b00000000000000000000000000000001 &
b10000000000000000000000000000001 )
b0001 ,
b0001 /
12
15
#40000000
b11111111111111111111111111111111 !
b01111111111111111111111111111111 $
1%
b11111111111111111111111111111111 &
b01111111111111111111111111111111 )
1*
bU10000000U +
b1111 ,
b1111 /
17
1:
1<
1?
1A
1D
b1111 F
b1111 I
1L
1O
1Q
1T
1V
1Y
1[
1^
b1111 `
b1111 c
1f
1i
1k
1n
1p
1s
1u
1x
b1111 z
b1111 }
1#"
1&"
1("
1+"
1-"
10"
12"
15"
b1111 7"
b1111 :"
1="
1@"
1B"
1E"
1G"
1J"
1L"
1O"
b1111 Q"
b1111 T"
1W"
1Z"
1\"
1_"
1a"
1d"
1f"
1i"
b1111 k"
b1111 n"
1q"
1t"
1v"
1y"
1{"
1!#
1##
1&#
b1111 (#
b0111 +#
1,#
b1000U -#
1.#
11#
13#
16#
18#
1;#
1=#
0@#
1A#
#50000000
b11111111111111111111111111111111 "
b11111111111111111111111111111110 $
b11111111111111111111111111111111 '
b11111111111111111111111111111110 )
bU11111111U +
b1111 -
b1110 /
10
b1111U 1
13
05
16
18
19
1:
1;
1=
1>
1?
1@
1B
1C
1D
1E
b1111 G
1H
b1111 I
1J
b1111U K
1M
1N
1O
1P
1R
1S
1T
1U
1W
1X
1Y
1Z
1\
1]
1^
1_
b1111 a
1b
b1111 c
1d
b1111U e
1g
1h
1i
1j
1l
1m
1n
1o
1q
1r
1s
1t
1v
1w
1x
1y
b1111 {
1|
b1111 }
1!"
b1111U ""
1$"
1%"
1&"
1'"
1)"
1*"
1+"
1,"
1."
1/"
10"
11"
13"
14"
15"
16"
b1111 8"
19"
b1111 :"
1;"
b1111U <"
1>"
1?"
1@"
1A"
1C"
1D"
1E"
1F"
1H"
1I"
1J"
1K"
1M"
1N"
1O"
1P"
b1111 R"
1S"
b1111 T"
1U"
b1111U V"
1X"
1Y"
1Z"
1["
1]"
1^"
1_"
1`"
1b"
1c"
1d"
1e"
1g"
1h"
1i"
1j"
b1111 l"
1m"
b1111 n"
1o"
b1111U p"
1r"
1s"
1t"
1u"
1w"
1x"
1y"
1z"
1|"
1}"
1!#
1"#
1$#
1%#
1&#
1'#
b1111 )#
1*#
b1111 +#
b1111U -#
1/#
10#
11#
12#
14#
15#
16#
17#
19#
1:#
1;#
1<#
1?#
1@#
#60000000
b00000000000000000000000000000000 "
b11111111111111111111111111111111 $
0%
b00000000000000000000000000000000 '
b11111111111111111111111111111111 )
0*
bU00000000U +
b0000 -
b1111 /
00
b0000U 1
03
15
06
08
09
1:
0;
0=
0>
1?
0@
0B
0C
1D
0E
b0000 G
0H
b1111 I
0J
b0000U K
0M
0N
1O
0P
0R
0S
1T
0U
0W
0X
1Y
0Z
0\
0]
1^
0_
b0000 a
0b
b1111 c
0d
b0000U e
0g
0h
1i
0j
0l
0m
1n
0o
0q
0r
1s
0t
0v
0w
1x
0y
b0000 {
0|
b1111 }
0!"
b0000U ""
0$"
0%"
1&"
0'"
0)"
0*"
1+"
0,"
0."
0/"
10"
01"
03"
04"
15"
06"
b0000 8"
09"
b1111 :"
0;"
b0000U <"
0>"
0?"
1@"
0A"
0C"
0D"
1E"
0F"
0H"
0I"
1J"
0K"
0M"
0N"
1O"
0P"
b0000 R"
0S"
b1111 T"
0U"
b0000U V"
0X"
0Y"
1Z"
0["
0]"
0^"
1_"
0`"
0b"
0c"
1d"
0e"
0g"
0h"
1i"
0j"
b0000 l"
0m"
b1111 n"
0o"
b0000U p"
0r"
0s"
1t"
0u"
0w"
0x"
1y"
0z"
0|"
0}"
1!#
0"#
0$#
0%#
1&#
0'#
b0000 )#
0*#
b1111 +#
0,#
b0000U -#
0/#
00#
11#
02#
04#
05#
16#
07#
09#
0:#
1;#
0<#
0>#
0?#
1@#
0A#
